<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//particles
//particle system
part_muzzle_flash_sys = part_system_create();

//muzzle_flash particle
part_muzzle_flash = part_type_create();
part_type_sprite(part_muzzle_flash, spr_muzzle_flash_particles, 0, 0, 1);
part_type_size(part_muzzle_flash, .6, 1.2, 0, 0);
//part_type_color2(part_muzzle_flash, c_orange, c_red);
part_type_alpha3(part_muzzle_flash, 1, 1, .5);

part_type_speed(part_muzzle_flash, 0, 0, 0, 0);
part_type_direction(part_muzzle_flash, point_direction(x, y, mouse_x, mouse_y), point_direction(x, y, mouse_x, mouse_y), 0, 10);
part_type_orientation(part_muzzle_flash, point_direction(x, y, mouse_x, mouse_y), point_direction(x, y, mouse_x, mouse_y), 0, 0, 0);
part_type_blend(part_muzzle_flash, 1);
life = part_type_life(part_muzzle_flash, 2, 2);
part_system_depth(part_muzzle_flash_sys, -1000000);

//particler emitter
part_muzzle_flash_emit = part_emitter_create(part_muzzle_flash_sys);
alarm[1] = life;
//create emitter
part_emitter_region(part_muzzle_flash_sys, part_muzzle_flash_emit, obj_player.spx, obj_player.spx,obj_player.spy, obj_player.spy, ps_shape_ellipse, ps_distr_linear);
part_emitter_burst(part_muzzle_flash_sys, part_muzzle_flash_emit, part_muzzle_flash, irandom_range(2, 8));

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>part_system_destroy(part_muzzle_flash_sys);
part_emitter_clear(part_muzzle_flash_sys, part_muzzle_flash);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = obj_gun.x + obj_player.spx;
y = obj_gun.y + obj_player.spy;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
